{"version":3,"file":"ngc-float-item-button.component.js","sourceRoot":"","sources":["ngc-float-item-button.component.ts"],"names":[],"mappings":"AAAA,kFAAkF;;;;;;;;;;AAElF,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EACZ,SAAS,EACT,uBAAuB,EACxB,MAAM,eAAe,CAAC;AA0EvB;IAxEA;QA4EW,UAAK,GAAW,OAAO,CAAC;QACvB,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;QACjD,aAAQ,GAAY,KAAK,CAAC;IAUrC,CAAC;IANC,oDAAc,GAAd,UAAe,MAAa;QAC1B,IAAI,IAAI,CAAC,QAAQ;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC;QAEvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAdQ;QAAR,KAAK,EAAE;;6DAAc;IACb;QAAR,KAAK,EAAE;;gEAAiB;IAChB;QAAR,KAAK,EAAE;;gEAAiB;IAChB;QAAR,KAAK,EAAE;;8DAAyB;IACvB;QAAT,MAAM,EAAE;kCAAU,YAAY;gEAA2B;IACjD;QAAR,KAAK,EAAE;;iEAA2B;IACO;QAAzC,SAAS,CAAC,YAAY,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;;mEAAY;IACX;QAAzC,SAAS,CAAC,YAAY,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;;mEAAY;IAR1C,2BAA2B;QAxEvC,SAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,MAAM,EAAE,CAAC,kmCAuDR,CAAC;YACF,QAAQ,EAAE,8fAWT;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;OACW,2BAA2B,CAgBvC;IAAD,kCAAC;CAAA,AAhBD,IAgBC;SAhBY,2BAA2B","sourcesContent":["/* created by @GustavoCostaW https://github.com/gustavocostaw/ngc-float-button  */\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'ngc-float-item-button',\n  styles: [`\n\n  .item {\n    width:250px;\n    height: 40px;\n    left:-203px;\n    transform: translate3d(0, 0, 0);\n    transition: transform, opacity ease-out 200ms;\n    transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\n    transition-duration: 180ms;\n    position: absolute;\n    cursor: pointer;\n    top:5px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n  }\n  \n  .item.disabled {\n    pointer-events: none;\n  }\n  \n  .item.disabled .fab-item {\n    background-color: lightgray;\n  }\n\n  .content {\n    background: #333333;\n    margin-right: 50px;\n    line-height: 25px;\n    color: white;\n    padding: 2px 7px;\n    border-radius: 3px;\n    display: none;\n    font-size: 12px;\n    height: 25px;\n    margin-top: 4px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  }\n\n  .fab-item {\n    right: 0;\n    background: white;\n    border-radius: 100%;\n    width: 40px;\n    height: 40px;\n    position: absolute;\n    color: #797979;\n    text-align: center;\n    cursor: pointer;\n    line-height: 50px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  }\n\n\n  `],\n  template: `\n    <div #elementref class=\"item {{ disabled ? 'disabled' : ''}}\" \n    (click)=\"emitClickEvent($event)\">\n        <div class=\"content-wrapper\" #contentref>\n          <div class=\"content\" [style.display]=\"content ? 'block' : 'none'\">{{content}}</div>\n        </div>\n        <a class=\"fab-item\" [style.backgroundColor]=\"color\">\n          <mat-icon *ngIf=\"svgIcon\" [svgIcon]=\"svgIcon\"></mat-icon>\n          <mat-icon *ngIf=\"!svgIcon\">{{icon}}</mat-icon>\n        </a>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgcFloatItemButtonComponent {\n  @Input() icon: string;\n  @Input() svgIcon: string;\n  @Input() content: string;\n  @Input() color: string = 'white';\n  @Output() clicked: EventEmitter<any> = new EventEmitter();\n  @Input() disabled: boolean = false;\n  @ViewChild('elementref', {static: false}) elementref;\n  @ViewChild('contentref', {static: false}) contentref;\n\n  emitClickEvent($event: Event) {\n    if (this.disabled)\n      return this.disabled;\n\n    this.clicked.emit($event);\n  }\n}\n"]}